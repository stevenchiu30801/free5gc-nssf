openapi: 3.0.0
info:
  description: NSSF NSSAI Availability Service
  title: NSSF NSSAI Availability
  version: 1.0.0
externalDocs:
  description: 3GPP TS 29.531 V15.2.0; 5G System; Network Slice Selection Services; Stage 3
  url: http://www.3gpp.org/ftp/Specs/archive/29_series/29.531/
servers:
- url: '{apiRoot}/nnssf-nssaiavailability/v1'
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in subclause 4.4 of 3GPP TS 29.501
security:
- {}
- oAuth2Clientcredentials:
  - nnssf-nssaiavailability
paths:
  /nssai-availability/{nfId}:
    delete:
      operationId: NSSAIAvailabilityDelete
      parameters:
      - description: Identifier of the NF service consumer instance
        explode: false
        in: path
        name: nfId
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: No Content (Successful deletion of SNSSAI information per TA)
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: Deletes an already existing S-NSSAIs per TA provided by the NF service consumer (e.g AMF)
      tags:
      - NF Instance ID (Document)
    patch:
      operationId: NSSAIAvailabilityPatch
      parameters:
      - description: Identifier of the NF service consumer instance
        explode: false
        in: path
        name: nfId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          'application/json-patch+json:':
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: JSON Patch instructions to update at the NSSF, the S-NSSAIs supported per TA
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedNssaiAvailabilityInfo'
          description: OK (Successful update of SNSSAI information per TA)
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: Updates an already existing S-NSSAIs per TA provided by the NF service consumer (e.g AMF)
      tags:
      - NF Instance ID (Document)
    put:
      operationId: NSSAIAvailabilityPut
      parameters:
      - description: Identifier of the NF service consumer instance
        explode: false
        in: path
        name: nfId
        required: true
        schema:
          $ref: '#/components/schemas/NfInstanceId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NssaiAvailabilityInfo'
        description: Parameters to update/replace at the NSSF, the S-NSSAIs supported per TA
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedNssaiAvailabilityInfo'
          description: OK (Successful update of SNSSAI information per TA)
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: Updates/replaces the NSSF with the S-NSSAIs the NF service consumer (e.g AMF)supports per TA
      tags:
      - NF Instance ID (Document)
  /nssai-availability/subscriptions:
    post:
      callbacks:
        nssaiAvailabilityNotification:
          '{request.body#/nfNssaiAvailabilityUri}':
            post:
              operationId: nssaiAvailabilityNotification_request_bodyNfNssaiAvailabilityUriPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/NssfEventNotification'
                required: true
              responses:
                204:
                  description: No Content (successful notification)
                400:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                411:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                413:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                415:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                429:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                500:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                503:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Unexpected error
              x-callback-request: true
      operationId: NSSAIAvailabilityPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NssfEventSubscriptionCreateData'
        description: Subscription for notification about updates to NSSAI availability information
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NssfEventSubscriptionCreatedData'
          description: Created (Successful creation of subscription for notification)
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nnssf-nssaiavailability/v1/nssai-availability/subscriptions/{subscriptionId}'
              explode: false
              required: true
              schema:
                type: string
              style: simple
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: Creates subscriptions for notification about updates to NSSAI availability information
      tags:
      - Subscriptions (Collection)
  /nssai-availability/subscriptions/{subscriptionId}:
    delete:
      operationId: NSSAIAvailabilityUnsubscribe
      parameters:
      - description: Identifier of the subscription for notification
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: No Content (Successful deletion of subscription for NSSAI Availability notification)
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: Deletes an already existing NSSAI availability notification subscription
      tags:
      - Subscription ID (Document)
components:
  schemas:
    NssaiAvailabilityInfo:
      example:
        supportedNssaiAvailabilityData:
        - supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        - supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        supportedFeatures: supportedFeatures
      properties:
        supportedNssaiAvailabilityData:
          items:
            $ref: '#/components/schemas/SupportedNssaiAvailabilityData'
          minItems: 1
          type: array
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - supportedNssaiAvailabilityData
      type: object
    SupportedNssaiAvailabilityData:
      example:
        supportedSnssaiList:
        - sd: sd
          sst: 20
        - sd: sd
          sst: 20
        tai:
          tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
      properties:
        tai:
          $ref: '#/components/schemas/Tai'
        supportedSnssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
      required:
      - supportedSnssaiList
      - tai
      type: object
    AuthorizedNssaiAvailabilityData:
      example:
        restrictedSnssaiList:
        - homePlmnId:
            mnc: mnc
            mcc: mcc
          sNssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
        - homePlmnId:
            mnc: mnc
            mcc: mcc
          sNssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
        supportedSnssaiList:
        - sd: sd
          sst: 20
        - sd: sd
          sst: 20
        tai:
          tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
      properties:
        tai:
          $ref: '#/components/schemas/Tai'
        supportedSnssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        restrictedSnssaiList:
          items:
            $ref: '#/components/schemas/RestrictedSnssai'
          minItems: 1
          type: array
      required:
      - supportedSnssaiList
      - tai
      type: object
    RestrictedSnssai:
      example:
        homePlmnId:
          mnc: mnc
          mcc: mcc
        sNssaiList:
        - sd: sd
          sst: 20
        - sd: sd
          sst: 20
      properties:
        homePlmnId:
          $ref: '#/components/schemas/PlmnId'
        sNssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
      required:
      - homePlmnId
      - sNssaiList
      type: object
    AuthorizedNssaiAvailabilityInfo:
      example:
        supportedFeatures: supportedFeatures
        authorizedNssaiAvailabilityData:
        - restrictedSnssaiList:
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        - restrictedSnssaiList:
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
      properties:
        authorizedNssaiAvailabilityData:
          items:
            $ref: '#/components/schemas/AuthorizedNssaiAvailabilityData'
          minItems: 1
          type: array
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - authorizedNssaiAvailabilityData
      type: object
    NssfEventSubscriptionCreateData:
      example:
        nfNssaiAvailabilityUri: nfNssaiAvailabilityUri
        expiry: 2000-01-23T04:56:07.000+00:00
        taiList:
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
      properties:
        nfNssaiAvailabilityUri:
          type: string
        taiList:
          items:
            $ref: '#/components/schemas/Tai'
          minItems: 1
          type: array
        event:
          $ref: '#/components/schemas/NssfEventType'
        expiry:
          format: date-time
          type: string
      required:
      - event
      - nfNssaiAvailabilityUri
      - taiList
      type: object
    NssfEventSubscriptionCreatedData:
      example:
        authorizedNssaiAvailabilityData:
        - restrictedSnssaiList:
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        - restrictedSnssaiList:
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        expiry: 2000-01-23T04:56:07.000+00:00
        subscriptionId: subscriptionId
      properties:
        subscriptionId:
          type: string
        expiry:
          format: date-time
          type: string
        authorizedNssaiAvailabilityData:
          items:
            $ref: '#/components/schemas/AuthorizedNssaiAvailabilityData'
          minItems: 1
          type: array
      required:
      - subscriptionId
      type: object
    NssfEventNotification:
      example:
        authorizedNssaiAvailabilityData:
        - restrictedSnssaiList:
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        - restrictedSnssaiList:
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          - homePlmnId:
              mnc: mnc
              mcc: mcc
            sNssaiList:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          supportedSnssaiList:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        subscriptionId: subscriptionId
      properties:
        subscriptionId:
          type: string
        authorizedNssaiAvailabilityData:
          items:
            $ref: '#/components/schemas/AuthorizedNssaiAvailabilityData'
          minItems: 1
          type: array
      required:
      - authorizedNssaiAvailabilityData
      - subscriptionId
      type: object
    NssfEventType:
      enum:
      - SNSSAI_STATUS_CHANGE_REPORT
      type: string
    PatchDocument:
      items:
        $ref: '#/components/schemas/PatchItem'
      minItems: 1
      type: array
    NfInstanceId:
      format: uuid
      type: string
    ProblemDetails:
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
        cause:
          type: string
        invalidParams:
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
      type: object
    Uri:
      type: string
    InvalidParam:
      properties:
        param:
          type: string
        reason:
          type: string
      required:
      - param
      type: object
    SupportedFeatures:
      pattern: ^[A-Fa-f0-9]*$
      type: string
    Tai:
      example:
        tac: tac
        plmnId:
          mnc: mnc
          mcc: mcc
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        tac:
          pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
          type: string
      required:
      - plmnId
      - tac
      type: object
    PlmnId:
      example:
        mnc: mnc
        mcc: mcc
      properties:
        mcc:
          pattern: ^\d{3}$
          type: string
        mnc:
          pattern: ^\d{2,3}$
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      pattern: ^\d{3}$
      type: string
    Mnc:
      pattern: ^\d{2,3}$
      type: string
    Tac:
      pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
      type: string
    Snssai:
      example:
        sd: sd
        sst: 20
      properties:
        sst:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        sd:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - sst
      type: object
    DateTime:
      format: date-time
      type: string
    PatchItem:
      properties:
        op:
          $ref: '#/components/schemas/PatchOperation'
        path:
          type: string
        from:
          type: string
        value:
          nullable: true
      required:
      - op
      - path
      type: object
    PatchOperation:
      enum:
      - add
      - copy
      - move
      - remove
      - replace
      - test
      type: string
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            nnssf-nssaiavailability: Access to the Nnssf_NSSAIAvailability API
          tokenUrl: '{nrfApiRoot}/oauth2/token'
      type: oauth2
