/*
 * NSSF NS Selection
 *
 * NSSF Network Slice Selection Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package model

import (
    "fmt"
)

type AllowedSnssai struct {

	AllowedSnssai *Snssai `json:"allowedSnssai"`

	NsiInformationList []NsiInformation `json:"nsiInformationList,omitempty"`

	MappedHomeSnssai *Snssai `json:"mappedHomeSnssai,omitempty"`
}

func (a *AllowedSnssai) CheckIntegrity() error {
    if a.AllowedSnssai == nil {
        return fmt.Errorf("`allowedSnssai` in query parameter should not be empty")
    } else {
        err := a.AllowedSnssai.CheckIntegrity()
        if err != nil {
            return fmt.Errorf("`allowedSnssai`:%s", err.Error())
        }
    }

    if a.NsiInformationList != nil && len(a.NsiInformationList) != 0 {
        for i, nsiInformation := range a.NsiInformationList {
            err := nsiInformation.CheckIntegrity()
            if err != nil {
                return fmt.Errorf("`nsiInformationList`[%d]:%s", i, err.Error())
            }
        }
    }

    if a.MappedHomeSnssai != nil {
        err := a.MappedHomeSnssai.CheckIntegrity()
        if err != nil {
            return fmt.Errorf("`mappedHomeSnssai`:%s", err.Error())
        }
    }

    return nil
}
