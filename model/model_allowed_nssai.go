/*
 * NSSF NS Selection
 *
 * NSSF Network Slice Selection Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package model

import (
    "fmt"
)

type AllowedNssai struct {

	AllowedSnssaiList []AllowedSnssai `json:"allowedSnssaiList"`

	AccessType *AccessType `json:"accessType"`
}

func (a *AllowedNssai) CheckIntegrity() error {
    // Deal with both nil slice and empty slice
    if a.AllowedSnssaiList == nil || len(a.AllowedSnssaiList) == 0 {
        return fmt.Errorf("`allowedSnssaiList` in query parameter should not be empty")
    } else {
        for i, allowedSnssai := range a.AllowedSnssaiList {
            err := allowedSnssai.CheckIntegrity()
            if err != nil {
                return fmt.Errorf("`allowedSnssaiList`[%d]:%s", i, err.Error())
            }
        }
    }

    if a.AccessType == nil || *a.AccessType == AccessType("") {
        return fmt.Errorf("`accessType` in query parameter should not be empty")
    } else {
        err := a.AccessType.CheckIntegrity()
        if err != nil {
            return fmt.Errorf("`accessType`:%s", err.Error())
        }
    }

    return nil
}
