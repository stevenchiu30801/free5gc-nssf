/*
 * NSSF NS Selection
 *
 * NSSF Network Slice Selection Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package model

import (
    "fmt"
)

type ConfiguredSnssai struct {

	ConfiguredSnssai *Snssai `json:"configuredSnssai"`

	MappedHomeSnssai *Snssai `json:"mappedHomeSnssai,omitempty"`
}

func (c *ConfiguredSnssai) CheckIntegrity() error {
    if c.ConfiguredSnssai == nil {
        return fmt.Errorf("`configuredSnssai` should not be empty")
    } else {
        err := c.ConfiguredSnssai.CheckIntegrity()
        if err != nil {
            return fmt.Errorf("`configuredSnssai`:%s", err.Error())
        }
    }

    if c.MappedHomeSnssai != nil {
        err := c.MappedHomeSnssai.CheckIntegrity()
        if err != nil {
            return fmt.Errorf("`mappedHomeSnssai`:%s", err.Error())
        }
    }

    return nil
}

type ByConfiguredSnssai []ConfiguredSnssai

func (c ByConfiguredSnssai) Len() int {
    return len(c)
}

func (c ByConfiguredSnssai) Swap(i, j int) {
    c[i], c[j] = c[j], c[i]
}

func (c ByConfiguredSnssai) Less(i, j int) bool {
    if c[i].ConfiguredSnssai.Sst == c[j].ConfiguredSnssai.Sst {
        return c[i].ConfiguredSnssai.Sd < c[j].ConfiguredSnssai.Sd
    }
    return c[i].ConfiguredSnssai.Sst < c[j].ConfiguredSnssai.Sst
}
